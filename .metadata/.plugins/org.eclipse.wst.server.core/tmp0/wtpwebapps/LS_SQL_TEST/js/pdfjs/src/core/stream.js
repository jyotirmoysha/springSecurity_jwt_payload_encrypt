"use strict";var Stream=function(){function t(e,t,n,r){this.bytes=e instanceof Uint8Array?e:new Uint8Array(e);this.start=t||0;this.pos=this.start;this.end=t+n||this.bytes.length;this.dict=r}t.prototype={get length(){return this.end-this.start},getByte:function(){if(this.pos>=this.end){return-1}return this.bytes[this.pos++]},getUint16:function(){var t=this.getByte();var n=this.getByte();return(t<<8)+n},getUint32:function(){var t=this.getByte();var n=this.getByte();var r=this.getByte();var i=this.getByte();return(t<<24)+(n<<16)+(r<<8)+i},getBytes:function(t){var n=this.bytes;var r=this.pos;var i=this.end;if(!t){return n.subarray(r,i)}var s=r+t;if(s>i){s=i}this.pos=s;return n.subarray(r,s)},peekBytes:function(t){var n=this.getBytes(t);this.pos-=n.length;return n},skip:function(t){if(!t){t=1}this.pos+=t},reset:function(){this.pos=this.start},moveStart:function(){this.start=this.pos},makeSubStream:function(n,r,i){return new t(this.bytes.buffer,n,r,i)},isStream:true};return t}();var StringStream=function(){function t(e){var t=e.length;var n=new Uint8Array(t);for(var r=0;r<t;++r){n[r]=e.charCodeAt(r)}Stream.call(this,n)}t.prototype=Stream.prototype;return t}();var DecodeStream=function(){function t(e){this.pos=0;this.bufferLength=0;this.eof=false;this.buffer=null;this.minBufferLength=512;if(e){while(this.minBufferLength<e){this.minBufferLength*=2}}}t.prototype={ensureBuffer:function(t){var n=this.buffer;var r;if(n){r=n.byteLength;if(t<=r){return n}}else{r=0}var i=this.minBufferLength;while(i<t){i*=2}var s=new Uint8Array(i);for(var o=0;o<r;++o){s[o]=n[o]}return this.buffer=s},getByte:function(){var t=this.pos;while(this.bufferLength<=t){if(this.eof){return-1}this.readBlock()}return this.buffer[this.pos++]},getUint16:function(){var t=this.getByte();var n=this.getByte();return(t<<8)+n},getUint32:function(){var t=this.getByte();var n=this.getByte();var r=this.getByte();var i=this.getByte();return(t<<24)+(n<<16)+(r<<8)+i},getBytes:function(t){var n,r=this.pos;if(t){this.ensureBuffer(r+t);n=r+t;while(!this.eof&&this.bufferLength<n){this.readBlock()}var i=this.bufferLength;if(n>i){n=i}}else{while(!this.eof){this.readBlock()}n=this.bufferLength;if(!n){this.buffer=new Uint8Array(0)}}this.pos=n;return this.buffer.subarray(r,n)},peekBytes:function(t){var n=this.getBytes(t);this.pos-=n.length;return n},makeSubStream:function(t,n,r){var i=t+n;while(this.bufferLength<=i&&!this.eof){this.readBlock()}return new Stream(this.buffer,t,n,r)},skip:function(t){if(!t){t=1}this.pos+=t},reset:function(){this.pos=0},getBaseStreams:function(){if(this.str&&this.str.getBaseStreams){return this.str.getBaseStreams()}return[]}};return t}();var StreamsSequenceStream=function(){function t(e){this.streams=e;DecodeStream.call(this,null)}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlock=function(){var t=this.streams;if(t.length===0){this.eof=true;return}var n=t.shift();var r=n.getBytes();var i=this.bufferLength;var s=i+r.length;var o=this.ensureBuffer(s);o.set(r,i);this.bufferLength=s};t.prototype.getBaseStreams=function(){var t=[];for(var n=0,r=this.streams.length;n<r;n++){var i=this.streams[n];if(i.getBaseStreams){Util.concatenateToArray(t,i.getBaseStreams())}}return t};return t}();var FlateStream=function(){function o(e,t){this.str=e;this.dict=e.dict;var n=e.getByte();var r=e.getByte();if(n==-1||r==-1){error("Invalid header in flate stream: "+n+", "+r)}if((n&15)!=8){error("Unknown compression method in flate stream: "+n+", "+r)}if(((n<<8)+r)%31!==0){error("Bad FCHECK in flate stream: "+n+", "+r)}if(r&32){error("FDICT bit set in flate stream: "+n+", "+r)}this.codeSize=0;this.codeBuf=0;DecodeStream.call(this,t)}var t=new Uint32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);var n=new Uint32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]);var r=new Uint32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]);var i=[new Uint32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9];var s=[new Uint32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];o.prototype=Object.create(DecodeStream.prototype);o.prototype.getBits=function(t){var n=this.str;var r=this.codeSize;var i=this.codeBuf;var s;while(r<t){if((s=n.getByte())===-1){error("Bad encoding in flate stream")}i|=s<<r;r+=8}s=i&(1<<t)-1;this.codeBuf=i>>t;this.codeSize=r-=t;return s};o.prototype.getCode=function(t){var n=this.str;var r=t[0];var i=t[1];var s=this.codeSize;var o=this.codeBuf;while(s<i){var u;if((u=n.getByte())===-1){error("Bad encoding in flate stream")}o|=u<<s;s+=8}var a=r[o&(1<<i)-1];var f=a>>16;var l=a&65535;if(s===0||s<f||f===0){error("Bad encoding in flate stream")}this.codeBuf=o>>f;this.codeSize=s-f;return l};o.prototype.generateHuffmanTable=function(t){var n=t.length;var r=0;for(var i=0;i<n;++i){if(t[i]>r){r=t[i]}}var s=1<<r;var o=new Uint32Array(s);for(var u=1,a=0,f=2;u<=r;++u,a<<=1,f<<=1){for(var l=0;l<n;++l){if(t[l]==u){var c=0;var h=a;for(var i=0;i<u;++i){c=c<<1|h&1;h>>=1}for(var i=c;i<s;i+=f){o[i]=u<<16|l}++a}}}return[o,r]};o.prototype.readBlock=function(){var o=this.str;var u=this.getBits(3);if(u&1){this.eof=true}u>>=1;if(u===0){var a;if((a=o.getByte())===-1){error("Bad block header in flate stream")}var f=a;if((a=o.getByte())===-1){error("Bad block header in flate stream")}f|=a<<8;if((a=o.getByte())===-1){error("Bad block header in flate stream")}var l=a;if((a=o.getByte())===-1){error("Bad block header in flate stream")}l|=a<<8;if(l!=(~f&65535)&&(f!==0||l!==0)){error("Bad uncompressed block length in flate stream")}this.codeBuf=0;this.codeSize=0;var c=this.bufferLength;var h=this.ensureBuffer(c+f);var p=c+f;this.bufferLength=p;if(f===0){if(o.peekBytes(1).length===0){this.eof=true}}else{for(var d=c;d<p;++d){if((a=o.getByte())===-1){this.eof=true;break}h[d]=a}}return}var v;var m;if(u==1){v=i;m=s}else if(u==2){var g=this.getBits(5)+257;var y=this.getBits(5)+1;var b=this.getBits(4)+4;var w=new Uint8Array(t.length);for(var E=0;E<b;++E){w[t[E]]=this.getBits(3)}var S=this.generateHuffmanTable(w);var x=0;var E=0;var T=g+y;var N=new Uint8Array(T);while(E<T){var C=this.getCode(S);if(C==16){var k=2,L=3,A=x}else if(C==17){var k=3,L=3,A=x=0}else if(C==18){var k=7,L=11,A=x=0}else{N[E++]=x=C;continue}var O=this.getBits(k)+L;while(O-->0){N[E++]=A}}v=this.generateHuffmanTable(N.subarray(0,g));m=this.generateHuffmanTable(N.subarray(g,T))}else{error("Unknown block type in flate stream")}var h=this.buffer;var M=h?h.length:0;var _=this.bufferLength;while(true){var D=this.getCode(v);if(D<256){if(_+1>=M){h=this.ensureBuffer(_+1);M=h.length}h[_++]=D;continue}if(D==256){this.bufferLength=_;return}D-=257;D=n[D];var P=D>>16;if(P>0){P=this.getBits(P)}var x=(D&65535)+P;D=this.getCode(m);D=r[D];P=D>>16;if(P>0){P=this.getBits(P)}var H=(D&65535)+P;if(_+x>=M){h=this.ensureBuffer(_+x);M=h.length}for(var B=0;B<x;++B,++_){h[_]=h[_-H]}}};return o}();var PredictorStream=function(){function t(e,t,n){var r=this.predictor=n.get("Predictor")||1;if(r<=1){return e}if(r!==2&&(r<10||r>15)){error("Unsupported predictor: "+r)}if(r===2){this.readBlock=this.readBlockTiff}else{this.readBlock=this.readBlockPng}this.str=e;this.dict=e.dict;var i=this.colors=n.get("Colors")||1;var s=this.bits=n.get("BitsPerComponent")||8;var o=this.columns=n.get("Columns")||1;this.pixBytes=i*s+7>>3;this.rowBytes=o*i*s+7>>3;DecodeStream.call(this,t);return this}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlockTiff=function(){var t=this.rowBytes;var n=this.bufferLength;var r=this.ensureBuffer(n+t);var i=this.bits;var s=this.colors;var o=this.str.getBytes(t);this.eof=!o.length;if(this.eof){return}var u=0,a=0;var f=0,l=0;var c=n;if(i===1){for(var h=0;h<t;++h){var p=o[h];u=u<<8|p;r[c++]=(p^u>>s)&255;u&=65535}}else if(i===8){for(var h=0;h<s;++h){r[c++]=o[h]}for(;h<t;++h){r[c]=r[c-s]+o[h];c++}}else{var d=new Uint8Array(s+1);var v=(1<<i)-1;var m=0,g=n;var y=this.columns;for(var h=0;h<y;++h){for(var b=0;b<s;++b){if(f<i){u=u<<8|o[m++]&255;f+=8}d[b]=d[b]+(u>>f-i)&v;f-=i;a=a<<i|d[b];l+=i;if(l>=8){r[g++]=a>>l-8&255;l-=8}}}if(l>0){r[g++]=(a<<8-l)+(u&(1<<8-l)-1)}}this.bufferLength+=t};t.prototype.readBlockPng=function(){var t=this.rowBytes;var n=this.pixBytes;var r=this.str.getByte();var i=this.str.getBytes(t);this.eof=!i.length;if(this.eof){return}var s=this.bufferLength;var o=this.ensureBuffer(s+t);var u=o.subarray(s-t,s);if(u.length===0){u=new Uint8Array(t)}var a=s;switch(r){case 0:for(var f=0;f<t;++f){o[a++]=i[f]}break;case 1:for(var f=0;f<n;++f){o[a++]=i[f]}for(;f<t;++f){o[a]=o[a-n]+i[f]&255;a++}break;case 2:for(var f=0;f<t;++f){o[a++]=u[f]+i[f]&255}break;case 3:for(var f=0;f<n;++f){o[a++]=(u[f]>>1)+i[f]}for(;f<t;++f){o[a]=(u[f]+o[a-n]>>1)+i[f]&255;a++}break;case 4:for(var f=0;f<n;++f){var l=u[f];var c=i[f];o[a++]=l+c}for(;f<t;++f){var l=u[f];var h=u[f-n];var p=o[a-n];var d=p+l-h;var v=d-p;if(v<0){v=-v}var m=d-l;if(m<0){m=-m}var g=d-h;if(g<0){g=-g}var c=i[f];if(v<=m&&v<=g){o[a++]=p+c}else if(m<=g){o[a++]=l+c}else{o[a++]=h+c}}break;default:error("Unsupported predictor: "+r)}this.bufferLength+=t};return t}();var JpegStream=function(){function t(e,t,n,r){this.stream=e;this.maybeLength=t;this.dict=n;DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);Object.defineProperty(t.prototype,"bytes",{get:function(){return shadow(this,"bytes",this.stream.getBytes(this.maybeLength))},configurable:true});t.prototype.ensureBuffer=function(t){if(this.bufferLength){return}try{var n=new JpegImage;if(this.colorTransform!=-1){n.colorTransform=this.colorTransform}n.parse(this.bytes);var r=n.width;var i=n.height;var s=n.getData(r,i);this.buffer=s;this.bufferLength=s.length;this.eof=true}catch(o){error("JPEG error: "+o)}};t.prototype.getIR=function(){return PDFJS.createObjectURL(this.bytes,"image/jpeg")};t.prototype.isNativelySupported=function(t,n){var r=ColorSpace.parse(this.dict.get("ColorSpace","CS"),t,n);return r.name==="DeviceGray"||r.name==="DeviceRGB"};t.prototype.isNativelyDecodable=function(t,n){var r=ColorSpace.parse(this.dict.get("ColorSpace","CS"),t,n);var i=r.numComps;return i==1||i==3};return t}();var JpxStream=function(){function t(e,t,n){this.stream=e;this.maybeLength=t;this.dict=n;DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);Object.defineProperty(t.prototype,"bytes",{get:function(){return shadow(this,"bytes",this.stream.getBytes(this.maybeLength))},configurable:true});t.prototype.ensureBuffer=function(t){if(this.bufferLength){return}var n=new JpxImage;n.parse(this.bytes);var r=n.width;var i=n.height;var s=n.componentsCount;if(s!=1&&s!=3&&s!=4){error("JPX with "+s+" components is not supported")}var o=new Uint8Array(r*i*s);for(var u=0,a=n.tiles.length;u<a;u++){var f=n.tiles[u];var l=f[0].width;var c=f[0].height;var h=f[0].left;var p=f[0].top;var d,v,m,g,y,b,w;switch(s){case 1:m=f[0].items;d=r*p+h;w=r-l;v=0;for(var E=0;E<c;E++){for(var S=0;S<l;S++){o[d++]=m[v++]}d+=w}break;case 3:m=f[0].items;g=f[1].items;y=f[2].items;d=(r*p+h)*3;w=(r-l)*3;v=0;for(var E=0;E<c;E++){for(var S=0;S<l;S++){o[d++]=m[v];o[d++]=g[v];o[d++]=y[v];v++}d+=w}break;case 4:m=f[0].items;g=f[1].items;y=f[2].items;b=f[3].items;d=(r*p+h)*4;w=(r-l)*4;v=0;for(var E=0;E<c;E++){for(var S=0;S<l;S++){o[d++]=m[v];o[d++]=g[v];o[d++]=y[v];o[d++]=b[v];v++}d+=w}break}}this.buffer=o;this.bufferLength=o.length;this.eof=true};return t}();var Jbig2Stream=function(){function t(e,t,n){this.stream=e;this.maybeLength=t;this.dict=n;DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);Object.defineProperty(t.prototype,"bytes",{get:function(){return shadow(this,"bytes",this.stream.getBytes(this.maybeLength))},configurable:true});t.prototype.ensureBuffer=function(t){if(this.bufferLength){return}var n=new Jbig2Image;var r=[],i=this.dict.get("DecodeParms");if(isArray(i)){if(i.length>1){warn("JBIG2 - 'DecodeParms' array with multiple elements "+"not supported.")}i=i[0]}if(i&&i.has("JBIG2Globals")){var s=i.get("JBIG2Globals");var o=s.getBytes();r.push({data:o,start:0,end:o.length})}r.push({data:this.bytes,start:0,end:this.bytes.length});var u=n.parseChunks(r);var a=u.length;for(var f=0;f<a;f++){u[f]^=255}this.buffer=u;this.bufferLength=a;this.eof=true};return t}();var DecryptStream=function(){function t(e,t,n){this.str=e;this.dict=e.dict;this.decrypt=n;this.nextChunk=null;this.initialized=false;DecodeStream.call(this,t)}var n=512;t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlock=function(){var t;if(this.initialized){t=this.nextChunk}else{t=this.str.getBytes(n);this.initialized=true}if(!t||t.length===0){this.eof=true;return}this.nextChunk=this.str.getBytes(n);var r=this.nextChunk&&this.nextChunk.length>0;var i=this.decrypt;t=i(t,!r);var s=this.bufferLength;var o,u=t.length;var a=this.ensureBuffer(s+u);for(o=0;o<u;o++){a[s++]=t[o]}this.bufferLength=s};return t}();var Ascii85Stream=function(){function t(e,t){this.str=e;this.dict=e.dict;this.input=new Uint8Array(5);if(t){t=.8*t}DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlock=function(){var t=126;var n=122;var r=-1;var i=this.str;var s=i.getByte();while(Lexer.isSpace(s)){s=i.getByte()}if(s===r||s===t){this.eof=true;return}var o=this.bufferLength,u;if(s==n){u=this.ensureBuffer(o+4);for(var a=0;a<4;++a){u[o+a]=0}this.bufferLength+=4}else{var f=this.input;f[0]=s;for(var a=1;a<5;++a){s=i.getByte();while(Lexer.isSpace(s)){s=i.getByte()}f[a]=s;if(s===r||s==t){break}}u=this.ensureBuffer(o+a-1);this.bufferLength+=a-1;if(a<5){for(;a<5;++a){f[a]=33+84}this.eof=true}var l=0;for(var a=0;a<5;++a){l=l*85+(f[a]-33)}for(var a=3;a>=0;--a){u[o+a]=l&255;l>>=8}}};return t}();var AsciiHexStream=function(){function t(e,t){this.str=e;this.dict=e.dict;this.firstDigit=-1;if(t){t=.5*t}DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlock=function(){var t=8e3;var n=this.str.getBytes(t);if(!n.length){this.eof=true;return}var r=n.length+1>>1;var i=this.ensureBuffer(this.bufferLength+r);var s=this.bufferLength;var o=this.firstDigit;for(var u=0,a=n.length;u<a;u++){var f=n[u],l;if(f>=48&&f<=57){l=f&15}else if(f>=65&&f<=70||f>=97&&f<=102){l=(f&15)+9}else if(f===62){this.eof=true;break}else{continue}if(o<0){o=l}else{i[s++]=o<<4|l;o=-1}}if(o>=0&&this.eof){i[s++]=o<<4;o=-1}this.firstDigit=o;this.bufferLength=s};return t}();var RunLengthStream=function(){function t(e,t){this.str=e;this.dict=e.dict;DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBlock=function(){var t=this.str.getBytes(2);if(!t||t.length<2||t[0]==128){this.eof=true;return}var n=this.bufferLength;var r=t[0];if(r<128){var i=this.ensureBuffer(n+r+1);i[n++]=t[1];if(r>0){var s=this.str.getBytes(r);i.set(s,n);n+=r}}else{r=257-r;var o=t[1];var i=this.ensureBuffer(n+r+1);for(var u=0;u<r;u++){i[n++]=o}}this.bufferLength=n};return t}();var CCITTFaxStream=function(){function g(e,t,n){this.str=e;this.dict=e.dict;n=n||new Dict;this.encoding=n.get("K")||0;this.eoline=n.get("EndOfLine")||false;this.byteAlign=n.get("EncodedByteAlign")||false;this.columns=n.get("Columns")||1728;this.rows=n.get("Rows")||0;var r=n.get("EndOfBlock");if(r===null||r===undefined){r=true}this.eoblock=r;this.black=n.get("BlackIs1")||false;this.codingLine=new Uint32Array(this.columns+1);this.refLine=new Uint32Array(this.columns+2);this.codingLine[0]=this.columns;this.codingPos=0;this.row=0;this.nextLine2D=this.encoding<0;this.inputBits=0;this.inputBuf=0;this.outputBits=0;var i;while((i=this.lookBits(12))===0){this.eatBits(1)}if(i==1){this.eatBits(12)}if(this.encoding>0){this.nextLine2D=!this.lookBits(1);this.eatBits(1)}DecodeStream.call(this,t)}var t=-2;var n=0;var r=1;var i=2;var s=3;var o=4;var u=5;var a=6;var f=7;var l=8;var c=[[-1,-1],[-1,-1],[7,l],[7,f],[6,a],[6,a],[6,u],[6,u],[4,n],[4,n],[4,n],[4,n],[4,n],[4,n],[4,n],[4,n],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,r],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[3,s],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i],[1,i]];var h=[[-1,-1],[12,t],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]];var p=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]];var d=[[-1,-1],[-1,-1],[12,t],[12,t],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]];var v=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]];var m=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];g.prototype=Object.create(DecodeStream.prototype);g.prototype.readBlock=function(){while(!this.eof){var t=this.lookChar();this.ensureBuffer(this.bufferLength+1);this.buffer[this.bufferLength++]=t}};g.prototype.addPixels=function(t,n){var r=this.codingLine;var i=this.codingPos;if(t>r[i]){if(t>this.columns){info("row is wrong length");this.err=true;t=this.columns}if(i&1^n){++i}r[i]=t}this.codingPos=i};g.prototype.addPixelsNeg=function(t,n){var r=this.codingLine;var i=this.codingPos;if(t>r[i]){if(t>this.columns){info("row is wrong length");this.err=true;t=this.columns}if(i&1^n){++i}r[i]=t}else if(t<r[i]){if(t<0){info("invalid code");this.err=true;t=0}while(i>0&&t<r[i-1]){--i}r[i]=t}this.codingPos=i};g.prototype.lookChar=function(){var t=this.refLine;var c=this.codingLine;var h=this.columns;var p,d,v;if(this.outputBits===0){if(this.eof){return null}this.err=false;var m,g,y;if(this.nextLine2D){for(var b=0;c[b]<h;++b){t[b]=c[b]}t[b++]=h;t[b]=h;c[0]=0;this.codingPos=0;p=0;d=0;while(c[this.codingPos]<h){m=this.getTwoDimCode();switch(m){case n:this.addPixels(t[p+1],d);if(t[p+1]<h){p+=2}break;case r:m=g=0;if(d){do{m+=y=this.getBlackCode()}while(y>=64);do{g+=y=this.getWhiteCode()}while(y>=64)}else{do{m+=y=this.getWhiteCode()}while(y>=64);do{g+=y=this.getBlackCode()}while(y>=64)}this.addPixels(c[this.codingPos]+m,d);if(c[this.codingPos]<h){this.addPixels(c[this.codingPos]+g,d^1)}while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}break;case f:this.addPixels(t[p]+3,d);d^=1;if(c[this.codingPos]<h){++p;while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case u:this.addPixels(t[p]+2,d);d^=1;if(c[this.codingPos]<h){++p;while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case s:this.addPixels(t[p]+1,d);d^=1;if(c[this.codingPos]<h){++p;while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case i:this.addPixels(t[p],d);d^=1;if(c[this.codingPos]<h){++p;while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case l:this.addPixelsNeg(t[p]-3,d);d^=1;if(c[this.codingPos]<h){if(p>0){--p}else{++p}while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case a:this.addPixelsNeg(t[p]-2,d);d^=1;if(c[this.codingPos]<h){if(p>0){--p}else{++p}while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case o:this.addPixelsNeg(t[p]-1,d);d^=1;if(c[this.codingPos]<h){if(p>0){--p}else{++p}while(t[p]<=c[this.codingPos]&&t[p]<h){p+=2}}break;case EOF:this.addPixels(h,0);this.eof=true;break;default:info("bad 2d code");this.addPixels(h,0);this.err=true}}}else{c[0]=0;this.codingPos=0;d=0;while(c[this.codingPos]<h){m=0;if(d){do{m+=y=this.getBlackCode()}while(y>=64)}else{do{m+=y=this.getWhiteCode()}while(y>=64)}this.addPixels(c[this.codingPos]+m,d);d^=1}}if(this.byteAlign){this.inputBits&=~7}var w=false;if(!this.eoblock&&this.row==this.rows-1){this.eof=true}else{m=this.lookBits(12);while(m===0){this.eatBits(1);m=this.lookBits(12)}if(m==1){this.eatBits(12);w=true}else if(m==EOF){this.eof=true}}if(!this.eof&&this.encoding>0){this.nextLine2D=!this.lookBits(1);this.eatBits(1)}if(this.eoblock&&w){m=this.lookBits(12);if(m==1){this.eatBits(12);if(this.encoding>0){this.lookBits(1);this.eatBits(1)}if(this.encoding>=0){for(var b=0;b<4;++b){m=this.lookBits(12);if(m!=1){info("bad rtc code: "+m)}this.eatBits(12);if(this.encoding>0){this.lookBits(1);this.eatBits(1)}}}this.eof=true}}else if(this.err&&this.eoline){while(true){m=this.lookBits(13);if(m==EOF){this.eof=true;return null}if(m>>1==1){break}this.eatBits(1)}this.eatBits(12);if(this.encoding>0){this.eatBits(1);this.nextLine2D=!(m&1)}}if(c[0]>0){this.outputBits=c[this.codingPos=0]}else{this.outputBits=c[this.codingPos=1]}this.row++}var E;if(this.outputBits>=8){E=this.codingPos&1?0:255;this.outputBits-=8;if(this.outputBits===0&&c[this.codingPos]<h){this.codingPos++;this.outputBits=c[this.codingPos]-c[this.codingPos-1]}}else{var v=8;E=0;do{if(this.outputBits>v){E<<=v;if(!(this.codingPos&1)){E|=255>>8-v}this.outputBits-=v;v=0}else{E<<=this.outputBits;if(!(this.codingPos&1)){E|=255>>8-this.outputBits}v-=this.outputBits;this.outputBits=0;if(c[this.codingPos]<h){this.codingPos++;this.outputBits=c[this.codingPos]-c[this.codingPos-1]}else if(v>0){E<<=v;v=0}}}while(v)}if(this.black){E^=255}return E};g.prototype.findTableCode=function(t,n,r,i){var s=i||0;for(var o=t;o<=n;++o){var u=this.lookBits(o);if(u==EOF){return[true,1,false]}if(o<n){u<<=n-o}if(!s||u>=s){var a=r[u-s];if(a[0]==o){this.eatBits(o);return[true,a[1],true]}}}return[false,0,false]};g.prototype.getTwoDimCode=function(){var t=0;var n;if(this.eoblock){t=this.lookBits(7);n=c[t];if(n&&n[0]>0){this.eatBits(n[0]);return n[1]}}else{var r=this.findTableCode(1,7,c);if(r[0]&&r[2]){return r[1]}}info("Bad two dim code");return EOF};g.prototype.getWhiteCode=function(){var t=0;var n;var r;if(this.eoblock){t=this.lookBits(12);if(t==EOF){return 1}if(t>>5===0){n=h[t]}else{n=p[t>>3]}if(n[0]>0){this.eatBits(n[0]);return n[1]}}else{var i=this.findTableCode(1,9,p);if(i[0]){return i[1]}i=this.findTableCode(11,12,h);if(i[0]){return i[1]}}info("bad white code");this.eatBits(1);return 1};g.prototype.getBlackCode=function(){var t,n;if(this.eoblock){t=this.lookBits(13);if(t==EOF){return 1}if(t>>7===0){n=d[t]}else if(t>>9===0&&t>>7!==0){n=v[(t>>1)-64]}else{n=m[t>>7]}if(n[0]>0){this.eatBits(n[0]);return n[1]}}else{var r=this.findTableCode(2,6,m);if(r[0]){return r[1]}r=this.findTableCode(7,12,v,64);if(r[0]){return r[1]}r=this.findTableCode(10,13,d);if(r[0]){return r[1]}}info("bad black code");this.eatBits(1);return 1};g.prototype.lookBits=function(t){var n;while(this.inputBits<t){if((n=this.str.getByte())===-1){if(this.inputBits===0){return EOF}return this.inputBuf<<t-this.inputBits&65535>>16-t}this.inputBuf=(this.inputBuf<<8)+n;this.inputBits+=8}return this.inputBuf>>this.inputBits-t&65535>>16-t};g.prototype.eatBits=function(t){if((this.inputBits-=t)<0){this.inputBits=0}};return g}();var LZWStream=function(){function t(e,t,n){this.str=e;this.dict=e.dict;this.cachedData=0;this.bitsCached=0;var r=4096;var i={earlyChange:n,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(r),dictionaryLengths:new Uint16Array(r),dictionaryPrevCodes:new Uint16Array(r),currentSequence:new Uint8Array(r),currentSequenceLength:0};for(var s=0;s<256;++s){i.dictionaryValues[s]=s;i.dictionaryLengths[s]=1}this.lzwState=i;DecodeStream.call(this,t)}t.prototype=Object.create(DecodeStream.prototype);t.prototype.readBits=function(t){var n=this.bitsCached;var r=this.cachedData;while(n<t){var i=this.str.getByte();if(i===-1){this.eof=true;return null}r=r<<8|i;n+=8}this.bitsCached=n-=t;this.cachedData=r;this.lastCode=null;return r>>>n&(1<<t)-1};t.prototype.readBlock=function(){var t=512;var n=t*2,r=t;var i,s,o;var u=this.lzwState;if(!u){return}var a=u.earlyChange;var f=u.nextCode;var l=u.dictionaryValues;var c=u.dictionaryLengths;var h=u.dictionaryPrevCodes;var p=u.codeLength;var d=u.prevCode;var v=u.currentSequence;var m=u.currentSequenceLength;var g=0;var y=this.bufferLength;var b=this.ensureBuffer(this.bufferLength+n);for(i=0;i<t;i++){var w=this.readBits(p);var E=m>0;if(w<256){v[0]=w;m=1}else if(w>=258){if(w<f){m=c[w];for(s=m-1,o=w;s>=0;s--){v[s]=l[o];o=h[o]}}else{v[m++]=v[0]}}else if(w==256){p=9;f=258;m=0;continue}else{this.eof=true;delete this.lzwState;break}if(E){h[f]=d;c[f]=c[d]+1;l[f]=v[0];f++;p=f+a&f+a-1?p:Math.min(Math.log(f+a)/.6931471805599453+1,12)|0}d=w;g+=m;if(n<g){do{n+=r}while(n<g);b=this.ensureBuffer(this.bufferLength+n)}for(s=0;s<m;s++){b[y++]=v[s]}}u.nextCode=f;u.codeLength=p;u.prevCode=d;u.currentSequenceLength=m;this.bufferLength=y};return t}();var NullStream=function(){function t(){Stream.call(this,new Uint8Array(0))}t.prototype=Stream.prototype;return t}()