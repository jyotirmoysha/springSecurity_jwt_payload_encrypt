/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.39
 * Generated at: 2019-01-25 12:41:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bulkUpload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/Workspaces/LSTEST4/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/LS_SQL_TEST/WEB-INF/lib/jstl-impl-1.2.jar!/META-INF/c.tld", Long.valueOf(1279244784000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/LSTEST4/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/LS_SQL_TEST/WEB-INF/lib/spring-security-taglibs-3.1.0.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1323100496000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-3.1.0.RELEASE.jar", Long.valueOf(1548407338489L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl-1.2.jar", Long.valueOf(1548407344436L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/LSTEST4/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/LS_SQL_TEST/WEB-INF/lib/jstl-impl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1279244784000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" />\r\n");
      out.write("<meta http-equiv=\"Expires\" content=\"-1\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/commonCSS/custom-style.css?value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${applicationScope['version']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/commonCSS/bulkupload-media-query.css\" />\r\n");
      out.write("<link href=\"css/uploadCss/fileinput.css\" media=\"all\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<link type=\"text/css\" href=\"fonts/font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"css/uploadCss/theme.css\" media=\"all\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"js/choosen/chosen.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/jquery-confirm.min.css\">\r\n");
      out.write("<script src=\"js/uic/jquery-2.1.1.min.js\" ></script>\r\n");
      out.write("<script src=\"js/jquery/jquery-ui.custom.min.js\"></script>\r\n");
      out.write("<script src=\"js/choosen/chosen.jquery.js\"></script>\r\n");
      out.write("<script src='js/jquery-customselect.js'></script>\r\n");
      out.write("<script src=\"js/uploadJs/fileinput.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"js/uploadJs/theme.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/appjs/bulkUpload.js\"></script>\r\n");
      out.write("<script src=\"js/jquery-confirm.min.js\" ></script>\r\n");
      out.write("<style>\r\n");
      out.write(".modal-header .close {display:none !important;}\r\n");
      out.write(".btn-complete{color: #fff; background-color: #00adcf !important; border-color: #00adcf !important; border-radius: 5px;}\r\n");
      out.write(".btn-complete:hover{background-color: #073262 !important; border-color: #073262 !important; color:#fff; border-radius: 5px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container-fluid mar-top80 rmDiv\">\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t<div class=\"panel-heading text-center\">ACCOUNT INFORMATION</div>\r\n");
      out.write("\t\t\t\t<div class=\"panel-body lt-panel\">\r\n");
      out.write("\t\t\t\t\t<div class=\"account\"><p class=\"text-center\">Before you upload your document please enter <span>Company Name</span> and <span>Company Id</span> to help us identify you.</p></div>\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div><!-- col-md-3 -->\r\n");
      out.write("\t\t<div class=\"col-md-9\">\r\n");
      out.write("\t\t\t<div class=\"panel panel-default\">\r\n");
      out.write("\t\t\t\t<div class=\"panel-body rt-panel\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"bulkUploadDiv\" class=\"tblContainer\" style=\"padding:0 10px 0 0\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"upload-panel\" style=\"overflow-y:auto; overflow-x:hidden\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-6\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Group Name: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-8\"><input type=\"text\" name=\"Groupname\" class=\"form-control\" id=\"Groupname\" readonly=\"true\" style=\"background-color: #EBEBE4;\" class=\"required\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${groupName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" /></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t <div class=\"col-md-6\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Sub Portifolio: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"Portfolio\" name=\"Portfolio\" class=\"select-new form-control\" onchange=\"getIndustryList(this.value);\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"0\">Select</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Company Name: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"c-name\" id=\"c-name\" class=\"required form-control\" value=\"\" onblur=\"setValuesOfCompanyName(this.value);\"/>\r\n");
      out.write("\t\t\t\t\t\t         <input type=\"hidden\" name=\"entity_id\" id=\"entity_id\" value=\"\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Company Id: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"company_id\" id=\"company_id\" maxlength=\"20\" class=\"required form-control\" placeholder=\"Maximum string length for Company Id is 20\" onblur=\"setValuesOfCompanyId(this.value);\" />\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 lang mar-top10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Language: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"language\" name=\"language\" class=\"required form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t ");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Norm Template: <span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select id=\"templateName\" name=\"templateName\" class=\"required form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f5(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f6(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f7(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mar-lt14\"><label class=\"custom-lbl\">Upload files:<span class=\"txt-red\">*</span></label></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"pad-bot5 mar-lt14 alert-lbl\">Acceptable Document Formats:pdf,doc,docx,xls,ppt,txt,jpg,jpeg,gif,bmp,tif,xlsx,msg<br/>File Name contains 'A-Z','a-z','0-9','-','_',space characters and file extension '.' only</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"container kv-main\">\r\n");
      out.write("\t\t\t\t\t\t\t\t    <form id=\"upload_file\"  action=\"upload_file\" method=\"POST\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t\t\t\t\t\t       <input type=\"hidden\" name=\"customerId\"  id=\"customerId\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t        <div class=\"file-loading\">\r\n");
      out.write("\t\t\t\t\t\t\t\t            <input id=\"fileupload\" name=\"fileupload\" type=\"file\" multiple>\r\n");
      out.write("\t\t\t\t\t\t\t\t        </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t        <div class=\"text-center\" style=\"margin-top:20px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t       \t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t </form>\r\n");
      out.write("\t\t\t\t\t\t\t\t </div><!-- main-div -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"text-center btn-panel\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-complete\" onclick=\"submitFiles();\" style=\"font-size:12px; padding:6px 8px !important\"><i class=\"fa fa-thumbs-up\" style=\"margin-right:3px\"></i>Complete</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t </div><!-- bulk-upload -->\r\n");
      out.write("\t\t\t\t\t</div><!-- row -->\r\n");
      out.write("\t\t\t\t</div><!-- panel-body -->\r\n");
      out.write("\t\t</div><!-- panel-default -->\r\n");
      out.write("\t</div><!-- col-md-9 -->\r\n");
      out.write("</div><!-- row -->\r\n");
      out.write("</div><!-- container-fluid -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"loadinglayer\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <div id=\"confirmPopUp\" class=\"modal fade\" role=\"dialog\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n");
      out.write("  <div class=\"modal-dialog mar-top78\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("        <h4 class=\"modal-title\">File Uploaded SuccessFully</h4>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <table id=\"confirmTbl\" class=\"table table-striped table-bordered datatable-new\" cellspacing=\"0\" width=\"100%\">\r\n");
      out.write("              <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("         \t\t<th style=\"text-align:left !important\">Company Name</th>\r\n");
      out.write("     \t        <th style=\"text-align:left !important\">Company Id</th>\r\n");
      out.write(" \t            <th style=\"text-align:left !important\">Document Type</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("              </thead>\r\n");
      out.write("              <tbody>\r\n");
      out.write("              </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" onclick=\"callBulkupload()\">Close</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("var uploadDeleteUrl='upload_delete.htm';\r\n");
      out.write("var uploadFileUrl='upload_file.htm'\r\n");
      out.write("var isPasswordCorrect=\"isPasswordCorrect.htm\";\r\n");
      out.write("var uploadConfirm=\"bulk_upload_confirm.htm\";\r\n");
      out.write("var fileUplodObj = $(\"#fileupload\");\r\n");
      out.write("var characterReg =  /(^[\\w\\s-_]+\\.)(pdf|doc|docx|xls|ppt|txt|jpg|jpeg|gif|bmp|tif|xlsx|msg)$/i ;\r\n");
      out.write("   \r\n");
      out.write("/* * ready  ** */\r\n");
      out.write("var naicsResultdata=[];\r\n");
      out.write("var sicsResultdata=[];\r\n");
      out.write("var businessNameListData=[];\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\t\t//validation\r\n");
      out.write("\t\t$('#c-name').keyup(function () { \r\n");
      out.write("\t\t    this.value = this.value.replace(/[^a-zA-Z0-9\\.\\s_-]/g,'');\r\n");
      out.write("\t\t});\r\n");
      out.write("    \t\r\n");
      out.write("\t\t$('#fileupload').click(function(){\r\n");
      out.write("\t\t\tvar itemLength = $('#uploadedTbl tbody tr.kv-preview-thumb').length;\r\n");
      out.write("\t\t\tif(itemLength>=10)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t$.alert(\"Max upload capacity per case is 10 documents.\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//naics\r\n");
      out.write("\t\t   $(\"#naics_description\").autocomplete({\r\n");
      out.write("\t        \tsource: getNaicsDescription,\r\n");
      out.write("\t            minLength: 2,\r\n");
      out.write("\t            select:function(event,ui){\r\n");
      out.write("\t            \tvar selectedDescription = $.trim(ui.item.label);\r\n");
      out.write("\t            \t$.each(naicsResultdata, function(k, v) {\r\n");
      out.write("\t            \t\tif(selectedDescription===v){\r\n");
      out.write("\t            \t\t\t$('#naicsId').val(k);\r\n");
      out.write("\t            \t\t\t$('#naics_description').val(selectedDescription);\r\n");
      out.write("\t            \t\t\treturn false;\r\n");
      out.write("\t            \t\t}\r\n");
      out.write("\t            \t});\r\n");
      out.write("\t             },\r\n");
      out.write("\t            change: function( event, ui ) {\r\n");
      out.write("\t            \t var val = $(this).val();\r\n");
      out.write("\t            \t  exists = $.inArray(val,naicsResultdata);\r\n");
      out.write("\t            \t  if (exists<0) {\r\n");
      out.write("\t            \t    $(this).val(\"\");\r\n");
      out.write("\t            \t    return false;\r\n");
      out.write("\t            \t  }\r\n");
      out.write("\t            }\r\n");
      out.write("           });\r\n");
      out.write("\t\t//sic \r\n");
      out.write("\t\t   $(\"#sic_description\").autocomplete({\r\n");
      out.write("\t        \tsource: getSicDescription,\r\n");
      out.write("\t            minLength: 2,\r\n");
      out.write("\t            select:function(event,ui){\r\n");
      out.write("\t            \tvar selectedDescription = $.trim(ui.item.label);\r\n");
      out.write("\t            \tvar resultVal=selectedDescription.split(\":\");\r\n");
      out.write("\t            \t$('#sicId').val(resultVal[0]);\r\n");
      out.write("\t            \t$('#sic_description').val(selectedDescription); \r\n");
      out.write("\t            \t},\r\n");
      out.write("\t\t            change: function( event, ui ) {\r\n");
      out.write("\t\t            \t var val = $(this).val();\r\n");
      out.write("\t\t            \t  exists = $.inArray(val,sicsResultdata);\r\n");
      out.write("\t\t            \t  if (exists<0) {\r\n");
      out.write("\t\t            \t    $(this).val(\"\");\r\n");
      out.write("\t\t            \t    return false;\r\n");
      out.write("\t\t            \t  }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\r\n");
      out.write("\t            });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar countryNameList = [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${countryNameList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("\t\tvar jsonCountryArray =  [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonCountry}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("    \t\r\n");
      out.write("\t\t$(\"#country-name\").autocomplete({\r\n");
      out.write("\t\t\t source:countryNameList,\r\n");
      out.write("\t         minLength: 1,\r\n");
      out.write("\t         select:function(event,ui){\r\n");
      out.write("\t        \tvar userChoice = $.trim(ui.item.label);                \r\n");
      out.write("\t             \r\n");
      out.write("\t         \tvar isNewOption = (countryNameList.indexOf(userChoice) === -1);\r\n");
      out.write("\t         \tif ((typeof userChoice === 'undefined') || (userChoice.length === 0)) {\r\n");
      out.write("\t         \t\t$(\"#country-id\").val(\"\");\r\n");
      out.write("\t         \t}else if(isNewOption) {\r\n");
      out.write("\t         \t\t$(\"#country-id\").val(\"\");\r\n");
      out.write("\t           }else {\r\n");
      out.write("\t        \t   $.each(jsonCountryArray, function(index, val) {\r\n");
      out.write("\t        \t\t   if(userChoice==val.countryName){\r\n");
      out.write("\t               \t\t\t$(\"#country-id\").val(val.countryId);\r\n");
      out.write("\t               \t\t}\r\n");
      out.write("\t        \t   });\r\n");
      out.write("\t           }\r\n");
      out.write("\t         },\r\n");
      out.write("\t         change : function(event,ui){\r\n");
      out.write("\t        \t var userChoice = $.trim(ui.item.label);                \r\n");
      out.write("\t             \r\n");
      out.write("\t          \tvar isNewOption = (countryNameList.indexOf(userChoice) === -1);\r\n");
      out.write("\t          \tif ((typeof userChoice === 'undefined') || (userChoice.length === 0)) {\r\n");
      out.write("\t          \t\t$(\"#country-id\").val(\"\");\r\n");
      out.write("\t          \t}else if(isNewOption) {\r\n");
      out.write("\t          \t\t$(\"#country-id\").val(\"\");\r\n");
      out.write("\t            }else {\r\n");
      out.write("\t         \t   $.each(jsonCountryArray, function(index, val) {\r\n");
      out.write("\t         \t\t   if(userChoice==val.countryName){\r\n");
      out.write("\t                \t\t\t$(\"#country-id\").val(val.countryId);\r\n");
      out.write("\t                \t\t}\r\n");
      out.write("\t         \t   });\r\n");
      out.write("\t            }\r\n");
      out.write("\t         }\r\n");
      out.write("\t\t});\r\n");
      out.write("    \r\n");
      out.write("       var montthList = [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${monthList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("\t\tvar sel=\"\";\r\n");
      out.write("\t\t$(\"#fYEMonth-name\").autocomplete({\r\n");
      out.write("\t\t\t source:montthList,\r\n");
      out.write("\t         minLength: 1,\r\n");
      out.write("\t         select:function(event,ui){\r\n");
      out.write("\t         \tvar userChoice = $.trim(ui.item.label).toLowerCase().replace(/\\b[a-z]/g, function(letter) {\r\n");
      out.write("\t         \t    return letter.toUpperCase();\r\n");
      out.write("\t         \t});              \r\n");
      out.write("\t         \tsetMonthDate(userChoice);\r\n");
      out.write("\t          }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction companyIdsList(request, response){\r\n");
      out.write("\t\t\t var resultsArray=[];\r\n");
      out.write("\t\t \t\tconsole.info(\"in companyIdsList function \");\r\n");
      out.write("\t\t \t\tvar resultsArray =[];\r\n");
      out.write("\t\t\t\t$.ajaxSetup({\r\n");
      out.write("\t\t\t\t\tcache: true\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t \t\t$.ajax({\r\n");
      out.write("\t\t \t\t\ttype: 'GET',\r\n");
      out.write("\t\t \t\t\turl: 'getcompanyIdsList.htm',\r\n");
      out.write("\t\t \t\t\tdataType: \"json\",\r\n");
      out.write("\t\t \t\t\tasync:false,\r\n");
      out.write("\t\t \t\t\tcache: true,\r\n");
      out.write("\t\t \t\t\tdata: {companyId : $(\"#company_id\").val()},\r\n");
      out.write("\t\t \t\t\tsuccess: function(data){\r\n");
      out.write("\t\t \t\t\tif (data != null){  \r\n");
      out.write("\t\t \t\t\tvar resultJSON=JSON.stringify(data);\r\n");
      out.write("\t\t \t\t\tresultdata = $.parseJSON(resultJSON);\r\n");
      out.write("\t\t \t\t\t$.each(resultdata, function(k, v) {\r\n");
      out.write("\t\t \t\t\t   resultsArray.push(v);\r\n");
      out.write("\t\t \t\t\t   \r\n");
      out.write("\t\t \t\t\t});\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t\tresponse(resultsArray);\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t});\r\n");
      out.write("\t\t \t  }\r\n");
      out.write("\t\t \t  function businessNameList(request, response){\r\n");
      out.write("\t\t \t\t var resultsArray=[];\r\n");
      out.write("\t\t \t\tconsole.info(\"in businessNameList function \");\r\n");
      out.write("\t\t \t\t$(\"#entity_id\").val(\"\");\r\n");
      out.write("\t\t \t\tvar resultsArray =[];\r\n");
      out.write("\t\t\t\t$.ajaxSetup({\r\n");
      out.write("\t\t\t\t\tcache: true\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t \t\t$.ajax({\r\n");
      out.write("\t\t \t\t\ttype: 'GET',\r\n");
      out.write("\t\t \t\t\turl: 'getBusinessNameList.htm',\r\n");
      out.write("\t\t \t\t\tdataType: \"json\",\r\n");
      out.write("\t\t \t\t\tasync:false,\r\n");
      out.write("\t\t \t\t\tcache: true,\r\n");
      out.write("\t\t \t\t\tdata: {cName : $(\"#c-name\").val()},\r\n");
      out.write("\t\t \t\t\tsuccess: function(data){\r\n");
      out.write("\t\t \t\t\tif (data != null){  \r\n");
      out.write("\t\t \t\t\tvar resultJSON=JSON.stringify(data);\r\n");
      out.write("\t\t \t\t\tbusinessNameListData = $.parseJSON(resultJSON);\r\n");
      out.write("\t\t \t\t\t$.each(businessNameListData, function(k, v) {\r\n");
      out.write("\t\t \t\t\t  resultsArray.push(v);\r\n");
      out.write("\t\t \t\t\t});\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t\tresponse(resultsArray);\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t});\r\n");
      out.write("\t\t \t  }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t \t  \r\n");
      out.write("\t\t      //company_Id autocompletion  \r\n");
      out.write("\t\t    \t   $( \"#company_id\" ).autocomplete({\r\n");
      out.write("\t\t    \t\t      source: companyIdsList,\r\n");
      out.write("\t\t    \t\t      minLength: 1,\r\n");
      out.write("\t\t    \t\t      select:function(event,ui){\r\n");
      out.write("\t\t    \t\t    \tcpId = $.trim(ui.item.label);   \r\n");
      out.write("\t\t    \t\t    \t$('#company_id').val(cpId);\r\n");
      out.write("\t\t    \t\t    \tsetValuesOfCompanyId(cpId);\r\n");
      out.write("\t\t    \t\t    \t\r\n");
      out.write("\t\t\t              }\r\n");
      out.write("\t\t    \t\t    });\r\n");
      out.write("\t\t      // company Name autocompletion \r\n");
      out.write("\t\t        $(\"#c-name\").autocomplete({\r\n");
      out.write("\t\t            source:businessNameList,\r\n");
      out.write("\t\t            minLength: 1,\r\n");
      out.write("\t\t             select:function(event,ui){\r\n");
      out.write("\t\t               var companyName = $.trim(ui.item.label);              \t\r\n");
      out.write("\t\t               $('#c-name').val(companyName); \r\n");
      out.write("\t\t            \t$.each(businessNameListData, function(k, v) {\r\n");
      out.write("\t\t            \tif(companyName===v){\r\n");
      out.write("\t\t            \t\t$('#entity_id').val(k);\r\n");
      out.write("\t\t            \t\tsetValuesOfCompanyName(v);\r\n");
      out.write("\t\t            \t  }\r\n");
      out.write("\t\t            \t});\r\n");
      out.write("\t               \t},\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t        $(\"#sic_description\").autocomplete({\r\n");
      out.write("\t\t        \tsource: getSicDescription,\r\n");
      out.write("\t\t            minLength: 2, \t\r\n");
      out.write("\t\t            select:function(event,ui){\r\n");
      out.write("\t\t            \tvar selectedDescription = $.trim(ui.item.label);\r\n");
      out.write("\t\t            \tfor(i=0;i<sicsResultdata.length;i++){\r\n");
      out.write("\t\t            \t if(selectedDescription===sicsResultdata[i].value){\r\n");
      out.write("\t\t            \t  $('#sicId').val(sicsResultdata[i].key);\r\n");
      out.write("\t\t            \t  $('#sic_description').val(selectedDescription);\r\n");
      out.write("\t\t            \t  return false; \r\n");
      out.write("\t\t            \t }\r\n");
      out.write("\t\t            \t}\r\n");
      out.write("\t\t             },\r\n");
      out.write("\t\t            change: function( event, ui ) {\r\n");
      out.write("\t\t            \t var val = $(this).val();\r\n");
      out.write("\t\t            \t  var exists =0;\r\n");
      out.write("\t\t\t               for(i=0;i<sicsResultdata.length;i++)\r\n");
      out.write("\t\t\t               {\r\n");
      out.write("\t\t\t            \t if(sicsResultdata[i].value===val)\r\n");
      out.write("\t\t\t            \t {\r\n");
      out.write("\t\t\t            \t\t exists=1;\t\t        \t\r\n");
      out.write("\t\t        \t\t\t }\r\n");
      out.write("\t\t\t               }\r\n");
      out.write("\r\n");
      out.write("\t\t            \t  if (exists<=0) {\r\n");
      out.write("\t\t            \t    $(this).val(\"\");\r\n");
      out.write("\t\t            \t    $('#sicId').val(\"0\");\r\n");
      out.write("\t\t            \t    return false;\r\n");
      out.write("\t\t            \t  }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t            });\r\n");
      out.write("\r\n");
      out.write("\t\t        $(\"#naics_description\").autocomplete({\r\n");
      out.write("\t\t        \tsource: getNaicsDescription,\r\n");
      out.write("\t\t            minLength: 2, \t\r\n");
      out.write("\t\t            select:function(event,ui){\r\n");
      out.write("\t\t            \tvar selectedDescription = $.trim(ui.item.label);\r\n");
      out.write("\t\t            \tfor(i=0;i<naicsResultdata.length;i++){\r\n");
      out.write("\t\t            \t if(selectedDescription===naicsResultdata[i].value){\r\n");
      out.write("\t\t            \t  $('#naicsId').val(naicsResultdata[i].key);\r\n");
      out.write("\t\t            \t  $('#naics_description').val(selectedDescription);\r\n");
      out.write("\t\t            \t  return false; \r\n");
      out.write("\t\t            \t }\r\n");
      out.write("\t\t            \t}\r\n");
      out.write("\t\t             },\r\n");
      out.write("\t\t            change: function( event, ui ) {\r\n");
      out.write("\t\t            \t var val = $(this).val();\r\n");
      out.write("\t\t            \t  var exists =0;\r\n");
      out.write("\t\t\t               for(i=0;i<naicsResultdata.length;i++)\r\n");
      out.write("\t\t\t               {\r\n");
      out.write("\t\t\t            \t if(naicsResultdata[i].value===val)\r\n");
      out.write("\t\t\t            \t {\r\n");
      out.write("\t\t\t            \t\t exists=1;\t\t        \t\r\n");
      out.write("\t\t        \t\t\t }\r\n");
      out.write("\t\t\t               }\r\n");
      out.write("\r\n");
      out.write("\t\t            \t  if (exists<=0) {\r\n");
      out.write("\t\t            \t    $(this).val(\"\");\r\n");
      out.write("\t\t            \t    $('#naicsId').val(\"0\");\r\n");
      out.write("\t\t            \t    return false;\r\n");
      out.write("\t\t            \t  }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t            });\r\n");
      out.write("\r\n");
      out.write("\t\t        \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t});\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction getSicDescription(request, response)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tsicsResultdata=[];\r\n");
      out.write("\t\t\tconsole.info(\"in getSicDescription function \");\r\n");
      out.write("\t\t\tvar resultsArray =[];\r\n");
      out.write("\t\t\t$.ajaxSetup({\r\n");
      out.write("\t\t\t\tcache: true\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: 'GET',\r\n");
      out.write("\t\t\t\turl: 'getSicDescription.htm',\r\n");
      out.write("\t\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\t\tasync:false,\r\n");
      out.write("\t\t\t\tcache: true,\r\n");
      out.write("\t\t\t\tdata: {sic_description : $(\"#sic_description\").val()},\r\n");
      out.write("\t\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tif (data != null){  \r\n");
      out.write("\t\t\t\tvar resultJSON=JSON.stringify(data);\r\n");
      out.write("\t\t\t\tresultdata = $.parseJSON(resultJSON);\r\n");
      out.write("\t\t\t\t$.each(resultdata, function(k, v) {\r\n");
      out.write("\t\t\t\t  sicsResultdata.push({key:k,value:v});\r\n");
      out.write("\t\t\t\t  resultsArray.push(v);\r\n");
      out.write("\t\t\t\t   \r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tresponse(resultsArray);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction getNaicsDescription(request, response)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tnaicsResultdata=[];\r\n");
      out.write("\t\t\t var resultdata=[];\r\n");
      out.write("\t\t\tconsole.info(\"in getNaicsDescription function \");\r\n");
      out.write("\t\t\tvar resultsArray =[];\r\n");
      out.write("\t\t\t$.ajaxSetup({\r\n");
      out.write("\t\t\t\tcache: true\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: 'GET',\r\n");
      out.write("\t\t\t\turl: 'getNaicsDescription.htm',\r\n");
      out.write("\t\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\t\tasync:false,\r\n");
      out.write("\t\t\t\tcache: true,\r\n");
      out.write("\t\t\t\tdata: {naics_description : $(\"#naics_description\").val()},\r\n");
      out.write("\t\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tif (data != null){  \r\n");
      out.write("\t\t\t\tvar resultJSON=JSON.stringify(data);\r\n");
      out.write("\t\t\t\tresultdata = $.parseJSON(resultJSON);\r\n");
      out.write("\t\t\t\t$.each(resultdata, function(k, v) {\r\n");
      out.write("\t\t\t\tresultsArray.push(v);\r\n");
      out.write("\t\t\t\tnaicsResultdata.push({key:k,value:v});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tresponse(resultdata);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("    \r\n");
      out.write("    /* end ready code*/\r\n");
      out.write("     \r\n");
      out.write("     function parserDropDown(fileName){\r\n");
      out.write("        \t\tvar selectParsers = '<select id=\"parser\" name=\"parser\" class=\"selectedVal form-control\" style=\"height:26px !important; width:auto;\">'; \r\n");
      out.write("        \t\t");
      if (_jspx_meth_c_005fforEach_005f6(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        \t\tselectParsers = selectParsers+'</select>';\r\n");
      out.write("        \t\treturn selectParsers;\r\n");
      out.write("        \t\t}  \r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("    function resetMonthAndDays(){\r\n");
      out.write("   \t\tvar yearVal=$(\"#fYEYear\").val();\r\n");
      out.write("   \t\tvar montthList = [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${monthList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("   \t\tvar sel=\"\";\r\n");
      out.write("   \t\tvar userChoice = $.trim($(\"#fYEMonth-name\").val());              \r\n");
      out.write("      \tvar isNewOption = (montthList.indexOf(userChoice) === -1);\r\n");
      out.write("      \t if(!$.isNumeric(yearVal) && yearVal.length>0){\r\n");
      out.write("      \t\t$.alert(\"Please enter Valid Year\");\r\n");
      out.write("      \t\t$(\"#fYEYear\").val(\"\");\r\n");
      out.write("      \t\t$(\"#fYEMonth-name\").val(\"\");\r\n");
      out.write("      \t\t$(\"#FYEDaySelect\").html(\"\");\r\n");
      out.write("      \t }else{\r\n");
      out.write("      \t\tif ((typeof userChoice === 'undefined') || (userChoice.length === 0)) {\r\n");
      out.write("          \t\t$(\"#FYEDaySelect\").html(\"\");\r\n");
      out.write("          \t}else if(isNewOption) {\r\n");
      out.write("          \t\t$(\"#FYEDaySelect\").html(\"\");\r\n");
      out.write("          \t\t$.alert(\"Please enter Valid Month\");\r\n");
      out.write("            }else {\r\n");
      out.write("            \t sel = '<select id=\"fYEDay\" name=\"fYEDay\" class=\"required form-control\" style=\"width:47px; padding:4px\">';  \r\n");
      out.write("         \t\t   if(userChoice== \"April\" || userChoice== \"June\" || userChoice== \"September\" || userChoice== \"November\"){\r\n");
      out.write("         \t\t\t  for(var i=1; i <=30;i++){\r\n");
      out.write("         \t\t\t\t sel = sel+\"<option value='\"+i+\"'>\"+i+\"</option>\";\r\n");
      out.write("         \t\t\t  }\r\n");
      out.write("                \t}else if(userChoice== \"February\" ){\r\n");
      out.write("                \t\tvar yearVal=parseInt($(\"#fYEYear\").val());\r\n");
      out.write("                \t\tvar days=28;\r\n");
      out.write("                \t\tif(yearVal%4==0){\r\n");
      out.write("                \t\t\tdays=29;\r\n");
      out.write("                \t\t}\r\n");
      out.write("                \t\tfor(var i=1; i <=days;i++){\r\n");
      out.write("            \t\t\t\t sel = sel+\"<option value='\"+i+\"' >\"+i+\"</option>\";\r\n");
      out.write("            \t\t\t  }\r\n");
      out.write("                \t}else{\r\n");
      out.write("                \t\tfor(var i=1; i <=31;i++){\r\n");
      out.write("                \t\t sel = sel+\"<option value='\"+i+\"' >\"+i+\"</option>\";\r\n");
      out.write("           \t\t\t  }\r\n");
      out.write("                \t}\r\n");
      out.write("         \t\t  sel = sel+'</select>';\r\n");
      out.write("         \t\t$(\"#FYEDaySelect\").html(sel);\r\n");
      out.write("            }\r\n");
      out.write("      \t }\r\n");
      out.write("    }\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("     \r\n");
      out.write("      function setMonthDate(userChoice){\r\n");
      out.write("        \t\tvar montthList = [");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${monthList}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("        \t\tvar isNewOption = (montthList.indexOf(userChoice) === -1);\r\n");
      out.write("              \tif ((typeof userChoice === 'undefined') || (userChoice.length === 0)) {\r\n");
      out.write("              \t\t$(\"#FYEDaySelect\").html(\"\");\r\n");
      out.write("              \t}else if(isNewOption) {\r\n");
      out.write("              \t\t$(\"#FYEDaySelect\").html(\"\");\r\n");
      out.write("              \t\t$(\"#fYEMonth-name\").val(\"\");\r\n");
      out.write("              \t\t$.alert(\"Please enter Valid Month\");\r\n");
      out.write("                }else {\r\n");
      out.write("                \t$(\"#fYEMonth-name\").val(userChoice.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\r\n");
      out.write("                 \t    return letter.toUpperCase();\r\n");
      out.write("                 \t}));\r\n");
      out.write("                \t              \r\n");
      out.write("                \t sel = '<select id=\"fYEDay\" name=\"fYEDay\" class=\"required form-control\" style=\"width:47px; padding:4px\">';  \r\n");
      out.write("             \t\t   if(userChoice== \"April\" || userChoice== \"June\" || userChoice== \"September\" || userChoice== \"November\"){\r\n");
      out.write("             \t\t\t  for(var i=1; i <=30;i++){\r\n");
      out.write("             \t\t\t\t sel = sel+\"<option value='\"+i+\"' style='font-style:italic; background:#006995; color:#fff;'>\"+i+\"</option>\";\r\n");
      out.write("             \t\t\t  }\r\n");
      out.write("                    \t}else if(userChoice== \"February\" ){\r\n");
      out.write("                    \t\tvar yearVal=parseInt($(\"#fYEYear\").val());\r\n");
      out.write("                    \t\tvar days=28;\r\n");
      out.write("                    \t\tif(yearVal%4==0){\r\n");
      out.write("                    \t\t\tdays=29;\r\n");
      out.write("                    \t\t}\r\n");
      out.write("                    \t\tfor(var i=1; i <=days;i++){\r\n");
      out.write("                \t\t\t\t sel = sel+\"<option value='\"+i+\"' style='font-style:italic; background:#006995; color:#fff;'>\"+i+\"</option>\";\r\n");
      out.write("                \t\t\t  }\r\n");
      out.write("                    \t}else{\r\n");
      out.write("                    \t\tfor(var i=1; i <=31;i++){\r\n");
      out.write("                    \t\t sel = sel+\"<option value='\"+i+\"' style='font-style:italic; background:#006995; color:#fff;'>\"+i+\"</option>\";\r\n");
      out.write("               \t\t\t  }\r\n");
      out.write("                    \t}\r\n");
      out.write("             \t\t  sel = sel+'</select>';\r\n");
      out.write("             \t\t$(\"#FYEDaySelect\").html(sel);\r\n");
      out.write("                }\r\n");
      out.write("              \t\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\t\t\t\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(63,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("portfolio");
      // /WEB-INF/jsp/bulkUpload.jsp(63,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(63,10) '${portfolioList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${portfolioList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolio.subPortFolioId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolio.subPortFolioName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(85,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['Country'] eq 'Country'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Country:</label></div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"country-name\" id=\"country-name\" class=\"required clr form-control\" onblur=\"\" value=\"\"/>\r\n");
          out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"country-id\" id=\"country-id\" value=\"\" class=\"clr form-control\"/>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(95,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['FYE'] eq 'FYE'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">FYE:<span class=\"txt-red\">*</span></label></div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-3 year-panel\"><input type=\"text\" name=\"fYEYear\" id=\"fYEYear\" class=\"required clr form-control\" placeholder=\"Year\"   value=\"\" maxlength=\"4\" onblur=\"resetMonthAndDays();\"/></div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-3 month-panel\"><input type=\"text\" name=\"fYEMonth-name\" id=\"fYEMonth-name\" class=\"required clr form-control\" placeholder=\"Month\" onblur=\"validateFyeMonth();\" value=\"\"  /></div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-2 day-panel\" id=\"FYEDaySelect\"></div>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(104,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['Industry_Code'] eq 'Industry_Code'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Industry Code : <span class=\"txt-red\">*</span></label></div>\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\"><input type=\"text\" name=\"industryId\" id=\"industryId\" class=\"required clr form-control\"  /></div>\t\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(111,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['Dealer_Name'] eq 'Dealer_Name'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Dealer Name: <span class=\"txt-red\">*</span></label></div>\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<select id=\"dealerId\" name=\"dealerId\" class=\"required form-control\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t <option value=\"\">Select</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t ");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
          out.write("\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /WEB-INF/jsp/bulkUpload.jsp(117,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("dealerObj");
      // /WEB-INF/jsp/bulkUpload.jsp(117,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(117,10) '${dealerList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${dealerList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dealerObj.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dealerObj.dealerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(130,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("languageObj");
      // /WEB-INF/jsp/bulkUpload.jsp(130,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(130,11) '${languageList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${languageList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t  <option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${languageObj.languageName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write(' ');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${languageObj.languageName == 'English' ? 'selected=\"selected\"' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${languageObj.languageName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f3.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(142,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVar("templateIdName");
      // /WEB-INF/jsp/bulkUpload.jsp(142,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(142,10) '${templateIdNameList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${templateIdNameList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
        if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateIdName.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${templateIdName.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f3.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(150,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['SIC'] eq 'SIC'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">SIC Description: </label></div>\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"sic_description\" id=\"sic_description\" class=\"required clr form-control\" onblur=\"\" value=\"\"/>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"sicId\" id=\"sicId\" value=\"\" class=\"form-control\" />\r\n");
          out.write("\t\t\t\t\t\t\t\t</div>\t\t\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(173,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['NAICS'] eq 'NAICS'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t <div class=\"col-md-4\"><label class=\"custom-lbl\">NAICS Description: </label></div>\r\n");
          out.write("\t\t\t\t\t\t\t  <div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t   <input type=\"text\" name=\"naics_description\" id=\"naics_description\" class=\"required clr form-control\" onblur=\"\" value=\"\"/>\r\n");
          out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"naicsId\" id=\"naicsId\" value=\"\" class=\"form-control\" />\r\n");
          out.write("\t\t\t\t\t\t\t  </div>\t\t\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f6 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f6.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(182,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f6.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userGrpAttrMappingMap['Industry Type'] eq 'Industry Type'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f6 = _jspx_th_c_005fif_005f6.doStartTag();
      if (_jspx_eval_c_005fif_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\t\r\n");
          out.write("\t\t\t\t\t\t <div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Industry Type: </label></div>\r\n");
          out.write("\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t  <select id=\"industry_type\" name=\"industry_type\" class=\"required form-control\">\r\n");
          out.write("\t\t\t\t\t\t\t\t<option value=\"0\">Select</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fforEach_005f4(_jspx_th_c_005fif_005f6, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t  </select>\r\n");
          out.write("\t\t\t\t\t\t\t</div>\t\t\r\n");
          out.write("\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f6.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f6, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f4 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f6);
      // /WEB-INF/jsp/bulkUpload.jsp(188,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setVar("industryType");
      // /WEB-INF/jsp/bulkUpload.jsp(188,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(188,8) '${industryTypeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${industryTypeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f4 = _jspx_th_c_005fforEach_005f4.doStartTag();
        if (_jspx_eval_c_005fforEach_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${industryType.industryTypeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${industryType.industryName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("  \t\t\t\t\t\t\t    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f4.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f4.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f7 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    try {
      _jspx_th_c_005fif_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f7.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(196,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f7.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isGoldenCaseUser eq 'Y'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f7 = _jspx_th_c_005fif_005f7.doStartTag();
      if (_jspx_eval_c_005fif_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t<div class=\"col-md-6 mar-top10\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-4\"><label class=\"custom-lbl\">Golden Case Feature: </label></div>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-8\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"goldenCaseId\" name=\"goldenCaseId\" class=\"required form-control\">\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\">Select</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fforEach_005f5(_jspx_th_c_005fif_005f7, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t    </select>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f7.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f7);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f7, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f5 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f7);
      // /WEB-INF/jsp/bulkUpload.jsp(202,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f5.setVar("goldenSetMetadata");
      // /WEB-INF/jsp/bulkUpload.jsp(202,11) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f5.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(202,11) '${goldenSetMetadatasList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${goldenSetMetadatasList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f5 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f5 = _jspx_th_c_005fforEach_005f5.doStartTag();
        if (_jspx_eval_c_005fforEach_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${goldenSetMetadata.caseId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${goldenSetMetadata.caseName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f5.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f5[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f5.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f5.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f6 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    try {
      _jspx_th_c_005fforEach_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f6.setParent(null);
      // /WEB-INF/jsp/bulkUpload.jsp(613,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f6.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/bulkUpload.jsp(613,10) '${parserMasterList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${parserMasterList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/bulkUpload.jsp(613,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f6.setVar("parserName");
      // /WEB-INF/jsp/bulkUpload.jsp(613,10) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f6.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f6 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f6 = _jspx_th_c_005fforEach_005f6.doStartTag();
        if (_jspx_eval_c_005fforEach_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("        \t\tselectParsers = selectParsers+\"<option value=\\\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${parserName.parserValue}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("~\"+fileName+\"\\\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${parserName.parserName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\";\r\n");
            out.write("        \t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f6.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f6[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f6.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f6.doFinally();
      }
    } finally {
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f6);
    }
    return false;
  }
}
