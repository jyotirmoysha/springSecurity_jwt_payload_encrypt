package com.livespread.domain;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.rage.reusable.dao.BaseEntity;
import com.rage.reusable.dao.EntityType;

@Entity
@Table(name = "USER_CSTM_FEATURE_MAPPING")
@NamedQueries({ @NamedQuery(name = "getUserCustomFeatureMappingByGroupId", query = "from UserCustomFeatureMapping r left join fetch r.applicationFeature where r.userId = :userId") })
public class UserCustomFeatureMapping implements BaseEntity, Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "USER_FEA_MAP_ID")
	private long id;

	@Column(name = "USER_ID")
	private Integer userId;

	// bi-directional many-to-one association to ErmApplicationFeature
	@OneToOne
	@JoinColumn(name = "FEATURE_ID")
	private ApplicationFeatures applicationFeature;

	public UserCustomFeatureMapping() {

	}

	public UserCustomFeatureMapping(long id) {
		this.id = id;

	}

	public UserCustomFeatureMapping(ApplicationFeatures applicationFeature) {
		this.applicationFeature = applicationFeature;

	}

	/**
	 * @return the userId
	 */
	public Integer getUserId() {
		return userId;
	}

	/**
	 * @param userId
	 *            the userId to set
	 */
	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	/**
	 * @return the id
	 */
	public long getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(long id) {
		this.id = id;
	}

	/**
	 * @return the ermApplicationFeature
	 */
	public ApplicationFeatures getErmApplicationFeature() {
		return applicationFeature;
	}

	/**
	 * @param ermApplicationFeature
	 *            the ermApplicationFeature to set
	 */
	public void setErmApplicationFeature(
			ApplicationFeatures ermApplicationFeature) {
		this.applicationFeature = ermApplicationFeature;
	}

	/**
	 * @return the applicationFeature
	 */
	public ApplicationFeatures getApplicationFeature() {
		return applicationFeature;
	}

	/**
	 * @param applicationFeature
	 *            the applicationFeature to set
	 */
	public void setApplicationFeature(ApplicationFeatures applicationFeature) {
		this.applicationFeature = applicationFeature;
	}

	public UserCustomFeatureMapping(int ermUserFeatureMappingId) {
		this.id = ermUserFeatureMappingId;
	}

	@Override
	public String toString() {
		return "UserCustomFeatureMapping [applicationFeature="
				+ applicationFeature + ", userFeatureMappingId=" + id + "]";
	}

	@Override
	public EntityType getEntityType() {
		return EntityType.APPLICATION;
	}
}