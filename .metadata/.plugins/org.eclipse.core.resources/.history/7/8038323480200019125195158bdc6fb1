package com.livespread.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
 
@Controller
@RequestMapping("/downloadFileByPath.htm")
public class DownloadFileByNameController {
     
    /**
     * Size of a byte buffer to read/write file
     * 20 MB file can download
     */
    private static final int BUFFER_SIZE = 20971520;
             
    /**
     * Path of the file to be downloaded, relative to application's directory
     */
    
     
    /**
     * Method for handling file download request from client
     */
    @RequestMapping(method = RequestMethod.GET)
    public void doDownload(HttpServletRequest request,HttpServletResponse response) {
 
        // get absolute path of the application
    	 File downloadFile=null;
    	 FileInputStream inputStream =null;
    	 OutputStream outStream =null;
    	try{
    	String filePath = request.getParameter("fileNameWithPath");
        ServletContext context = request.getServletContext();
        System.out.println("filePath = " + filePath);
        downloadFile = new File(filePath).getCanonicalFile();
        inputStream = new FileInputStream(downloadFile);
         
        // get MIME type of the file
        String mimeType = context.getMimeType(filePath);
        if (mimeType == null) {
            // set to binary type if MIME mapping not found
            mimeType = "application/octet-stream";
        }
        System.out.println("MIME type: " + mimeType);
 
        // set content attributes for the response
        response.setContentType(mimeType);
        response.setContentLength((int) downloadFile.length());
 
        // set headers for the response
        String headerKey = "Content-Disposition";
        String headerValue = String.format("attachment; filename=\"%s\"",
                downloadFile.getName());
        response.setHeader(headerKey, headerValue);
 
        // get output stream of the response
        outStream = response.getOutputStream();
 
        byte[] buffer = new byte[BUFFER_SIZE];
        int bytesRead = -1;
 
        // write bytes read from the input stream into the output stream
        while ((bytesRead = inputStream.read(buffer)) != -1) {
            outStream.write(buffer, 0, bytesRead);
        }
 

    	}catch(Exception e){
    		e.printStackTrace();
    		
    	}finally {

				try {
		    		if(inputStream!=null)
					inputStream.close();
		    		if(outStream!=null)
		        	outStream.close();
		    		downloadFile.delete();
				} catch (IOException e) {
					e.printStackTrace();
				}
		}
    }
}