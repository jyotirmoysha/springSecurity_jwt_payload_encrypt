package com.livespread.vta;

import java.io.IOException;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;

import org.apache.commons.io.FilenameUtils;

import com.livespread.common.AdminRequestUrls;

public class ExceptionHandlerResponseWrapper extends HttpServletResponseWrapper {

	HttpServletRequest request;
    HttpServletResponse wrappedResponse;

	public ExceptionHandlerResponseWrapper(HttpServletResponse response) {
		super(response);
	}
	
    public ExceptionHandlerResponseWrapper(HttpServletRequest request, HttpServletResponse response)
    {
        super(response);
        this.request= request;
        this.wrappedResponse= response;
    }

    @Override
    public void sendError(int status, String msg) throws IOException 
    {
        if(status==404){
        	
        	String[] urlArray = request.getRequestURI().split("/");
        	if(urlArray.length<=2)
        		{
    	    		wrappedResponse.sendRedirect("PageNotFoundLSCustomException.htm");
        		}
        	else if(urlArray.length==3)
        	{
        		String extention = FilenameUtils.getExtension(urlArray[2]);
        		String extensionRemovedUrl = urlArray[2].split("\\.")[0];
        		if(AdminRequestUrls.showAdminPanel.toString().equalsIgnoreCase(extensionRemovedUrl)){
         			wrappedResponse.sendRedirect("UnauthorizedAccessException.htm");
        		}else if(!(extention.equalsIgnoreCase("appcache") || extention.equalsIgnoreCase("map")))
        		{
        			wrappedResponse.sendRedirect("PageNotFoundLSCustomException.htm");
        		}

        	}
        	else
        	{
        		boolean urlValidationStatus = true;
        		Pattern pattern = Pattern.compile("^[a-zA-Z0-9-_]*$");
				urlValidationStatus = pattern.matcher(urlArray[2]).find();
				if(!urlValidationStatus)
				{
					wrappedResponse.sendRedirect(request.getServletContext().getContextPath()+"/PageNotFoundLSCustomException.htm");
				}
        	}
        	
        }
       
    }

	@Override
    public void sendError(int status) throws IOException 
	{
        if(status==404){
        	String[] urlArray = request.getRequestURI().split("/");
        	if(urlArray.length<=2)
        		{
    	    		wrappedResponse.sendRedirect("PageNotFoundLSCustomException.htm");
        		}
        	else if(urlArray.length==3)
        	{
        		String extention = FilenameUtils.getExtension(urlArray[2]);
        		if(!(extention.equalsIgnoreCase("appcache") || extention.equalsIgnoreCase("map")))
        		{
        			wrappedResponse.sendRedirect("PageNotFoundLSCustomException.htm");
        		}
        	}
        	else
        	{
        		boolean urlValidationStatus = true;
        		Pattern pattern = Pattern.compile("^[a-zA-Z0-9-_]*$");
				urlValidationStatus = pattern.matcher(urlArray[2]).find();
				if(!urlValidationStatus)
				{
					wrappedResponse.sendRedirect(request.getServletContext().getContextPath()+"/PageNotFoundLSCustomException.htm");
				}
        	}
        }
    }
    
}