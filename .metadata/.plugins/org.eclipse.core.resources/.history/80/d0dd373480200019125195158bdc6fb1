package com.livespread.controller;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.livespread.domain.User;
import com.livespread.domain.UserAuditModel;
import com.livespread.service.UserAuditService;
import com.livespread.service.UserGroupService;

@Controller
public class UserAuditController {

@Autowired
private UserAuditService userAuditService;

@Autowired
private UserGroupService userGroupService;

protected final Log logger = LogFactory.getLog(getClass());

@RequestMapping(value = "/downloadUserAuditReport.htm", method = {
			RequestMethod.GET, RequestMethod.POST })
	public ModelAndView  downloadUserAuditReport(Model model, HttpServletRequest request,
			HttpServletResponse response,HttpSession session){
		logger.info("** start--downloadUserAuditReport function");
	 	
		List<String> errorMsgList=new ArrayList<String>();
		Collection<UserAuditModel> userAuditList = null;
	 	try{
	 	SimpleDateFormat format1 = new SimpleDateFormat("MM/dd/yyyy");
	 	Date startDate1=null;
		Date endDate1=null;
		
	 	String startDate=(String) request.getParameter("startDate");
	 	String endDate=(String) request.getParameter("endDate");
	 	Integer userId=null;
	 	if(!request.getParameter("userId").isEmpty()){
		userId=Integer.parseInt(request.getParameter("userId"));
		}
	 	/**
	 	 * Here we convert string to Date
	 	 */
	 	if(startDate!=null && endDate!=null){
	 	if(!startDate.equalsIgnoreCase("") || !endDate.equalsIgnoreCase("")){
	 	startDate1 = format1.parse(startDate.trim());
        endDate1 = format1.parse(endDate.trim());
	 	}
	    }
	 	userAuditList=userAuditService.f_getUserAuditList(startDate1, endDate1, userId);
	 
	 	if(userAuditList!=null && userAuditList!=null){
	 		if(userAuditList.size()<1 && userAuditList.size()<1){
	 			errorMsgList.add("No Audit Records Found");
	 			return new ModelAndView("importError", "msg", "No User Audit Records Found");
	 		}
	 			
	 	}
	 	
	 
	 	}catch (Exception e) {
	 		e.printStackTrace();
	 		logger.error("error:"+e);
		}
		
		logger.info("** end--downloadUserAuditReport function");
		return new ModelAndView("downloadUserAuditReportExcel","userAuditList",userAuditList);

	}

@RequestMapping(value = "/showUserAuditReport.htm", method = { RequestMethod.GET,RequestMethod.POST })
@PreAuthorize("hasRole('ROLE_ADMIN')")
public String showAuditTrail(HttpServletRequest request,
		HttpServletResponse response, Model map) {
	logger.info("**Start-- showUserAuditReport()");
	try {
	/**	
	 * Here we fetch all User List id from users table which is active.
	 */
	List<User> userList=userGroupService.f_getActiveUserList();

	
	map.addAttribute("userList",userList);
	} catch (Exception ex) {
		logger.error("Exception in >>>.class showUserAuditReport method",ex);
	ex.printStackTrace();	
	}
	return "user_audit_report";
}
	
}
