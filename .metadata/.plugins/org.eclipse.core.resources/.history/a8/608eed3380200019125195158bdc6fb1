package com.livespread.domain;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.rage.reusable.dao.BaseEntity;
import com.rage.reusable.dao.EntityType;

@Entity
@Table(name = "USER_TEMPLATE_DETAILS")

@NamedQueries({
	@NamedQuery(name = "updateTemplateIdFlagbyGroupId", query ="delete from UserTemplateDetails WHERE userGroupId=:userGroupId AND templateId in (:templateId)"),
	@NamedQuery(name = "templeteIdsListByGroupId", query ="select templateId from UserTemplateDetails where userGroupId=:userGroupId and flag='A'"),
})
@NamedNativeQueries({
	@NamedNativeQuery(name="findAllUserTemplatesByGroupId", query = "select distinct UTD.TEMPLATE_ID,NIL.NIL_INDUSTRY ,UG.USERS_GROUP_ID,UG.USERS_GROUP_NAME, UTD.CREATED_DATE from USER_GROUPS UG left join USER_TEMPLATE_DETAILS UTD on (UTD.USER_GROUP_ID = UG.USERS_GROUP_ID) left join NORM_ITEM_LABELS NIL ON (NIL.TEMPLATE_ID=UTD.TEMPLATE_ID or NIL.TEMPLATE_ID is null) where UG.USERS_GROUP_ID in (select USERS_GROUP_ID from user_groups where PARENT_USER_GROUP=:userGroupId and flag <> 'D') order by UG.USERS_GROUP_NAME"),
	@NamedNativeQuery(name="findTemplateIdAndNameByGroupId",query="select distinct(template_id),NIL_INDUSTRY from NORM_ITEM_LABELS where TEMPLATE_ID in(select TEMPLATE_ID from USER_TEMPLATE_DETAILS where USER_GROUP_ID=:userGroupId and FLAG='A')"),
	@NamedNativeQuery(name="findAllUserTemplatesByGroupIdForGrpAdmin", query = "select distinct UTD.TEMPLATE_ID,NIL.NIL_INDUSTRY ,UG.USERS_GROUP_ID,UG.USERS_GROUP_NAME, UTD.CREATED_DATE from USER_GROUPS UG left join USER_TEMPLATE_DETAILS UTD on (UTD.USER_GROUP_ID = UG.USERS_GROUP_ID) left join NORM_ITEM_LABELS NIL ON (NIL.TEMPLATE_ID=UTD.TEMPLATE_ID or NIL.TEMPLATE_ID is null) where UTD.USER_GROUP_ID=:userGroupId and UG.FLAG <> 'D' order by UG.USERS_GROUP_NAME"),
})


public class UserTemplateDetails implements Serializable, BaseEntity {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "T_ID")
	private Integer id;

	@Column(name = "USER_GROUP_ID")
	private Integer userGroupId;

	@Column(name = "TEMPLATE_ID")
	private String templateId;

	@Column(name = "FLAG")
	private String flag;

	@Column(name = "CREATED_BY")
	private Integer createdBy;

	@Column(name = "CREATED_DATE")
	private Timestamp createdDate;

	@Column(name = "MODIFIED_BY")
	private Integer modifiedBy;

	@Column(name = "MODIFIED_DATE")
	private Timestamp modifiedDate;

	public Timestamp getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Timestamp createdDate) {
		this.createdDate = createdDate;
	}

	public Timestamp getModifiedDate() {
		return modifiedDate;
	}

	public void setModifiedDate(Timestamp modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	public Integer getId() {
		return id;
	}

	public String getFlag() {
		return flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Override
	public EntityType getEntityType() {
		return EntityType.APPLICATION;
	}

	public Integer getUserGroupId() {
		return userGroupId;
	}

	public void setUserGroupId(Integer userGroupId) {
		this.userGroupId = userGroupId;
	}

	public String getTemplateId() {
		return templateId;
	}

	public void setTemplateId(String templateId) {
		this.templateId = templateId;
	}

	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	public Integer getModifiedBy() {
		return modifiedBy;
	}

	public void setModifiedBy(Integer modifiedBy) {
		this.modifiedBy = modifiedBy;
	}
	

}
