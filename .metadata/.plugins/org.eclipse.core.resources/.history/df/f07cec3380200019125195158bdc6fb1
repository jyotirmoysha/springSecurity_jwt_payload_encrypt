/**
 * 
 */
package com.livespread.domain;

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.rage.reusable.dao.BaseEntity;
import com.rage.reusable.dao.EntityType;

/**
 * @author kp0e1301
 *
 */
@Entity
@Table(name = "NOTES_CHECKLIST")
@NamedQueries({
	@NamedQuery(name = "getNotesCheckListRecordsByFillingId", query = "select nc from NotesCheckList nc where nc.fillingId=:fillingId order by nc.section, nc.poId ")
	
})

public class NotesCheckList  implements Serializable, BaseEntity {
	

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "NOTES_CHECKLIST_ID")
	private Integer notesCheckListId;
	
	@Column(name = "FILING_ID")
	private Integer fillingId;
	
	@Column(name = "PO_ID")
	private Integer poId;
	
	@Column(name = "AS_REP_LABEL")
	private String asRepLabel;
	
	@Column(name = "SECTION")
	private String section;
	
	@Column(name = "TOTAL_SUPPL")
	private Integer totalSuppl;
	
	@Column(name = "TOTAL_BREAKUPS")
	private Integer totalBreakups;
	
	@Column(name = "page_list")
	private String pageList;
	
	public Integer getNotesCheckListId() {
		return notesCheckListId;
	}

	public void setNotesCheckListId(Integer notesCheckListId) {
		this.notesCheckListId = notesCheckListId;
	}

	public Integer getFillingId() {
		return fillingId;
	}

	public void setFillingId(Integer fillingId) {
		this.fillingId = fillingId;
	}

	public Integer getPoId() {
		return poId;
	}

	public void setPoId(Integer poId) {
		this.poId = poId;
	}

	public String getAsRepLabel() {
		return asRepLabel;
	}

	public void setAsRepLabel(String asRepLabel) {
		this.asRepLabel = asRepLabel;
	}

	public String getSection() {
		return section;
	}

	public void setSection(String section) {
		this.section = section;
	}

	public Integer getTotalSuppl() {
		return totalSuppl;
	}

	public void setTotalSuppl(Integer totalSuppl) {
		this.totalSuppl = totalSuppl;
	}

	public Integer getTotalBreakups() {
		return totalBreakups;
	}

	public void setTotalBreakups(Integer totalBreakups) {
		this.totalBreakups = totalBreakups;
	}

	@Override
	public EntityType getEntityType() {
		return EntityType.APPLICATION;
	}
	
	@Override
    public boolean equals(Object obj) {

        if (obj== this){
        	return true;
        }
        if (!(obj instanceof User)) {
            return false;
        }
        NotesCheckList notesCheckList = (NotesCheckList) obj;
        if((notesCheckListId!=null && notesCheckList.notesCheckListId!=null) && notesCheckListId.equals(notesCheckList.notesCheckListId)){
        	return true;
        }
        return false;
    }

    @Override
    public int hashCode() {
        return Objects.hash(notesCheckListId, fillingId, poId);
    }

	/**
	 * @return the pageList
	 */
	public String getPageList() {
		return pageList;
	}

	/**
	 * @param pageList the pageList to set
	 */
	public void setPageList(String pageList) {
		this.pageList = pageList;
	}


}

